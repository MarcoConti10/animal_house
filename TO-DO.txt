TO-DO: 

    -) CSS Mobile First
    -) Consegna: README, codice, dati già popolati del db
    -) Modify p to table and td in users-anagraphic.html and users-anagraphic.js
    -) Check why it changes every class name in users-anagraphic.js even without code explicitly changes
    -) Validate all fiedls of sign-in form. Se esiste già una mail o username di quel tipo, non fa andare avanti.
    -) Separate routing from server
    -) Check if <app.use(express.json()) & <app.use(express.urlencoded({extended: true}))> are 100% necessary
    -) Merge getHelpRequests with loadHelpRequests (loadHelpRequests is better in terms of class names)
    -) Separate anecdotes front and back (error for const outside)
    -) Language, english/italian coherence
    -) Help request: mettere la richiesta prima nella card, e sotto più piccolo scrivere "Inviare una mail al contatto: blabla@gmail.com per aiutarlo"
    -) Add header (to go at any moment to Game, Front Office, Back Office sections)
    -) name/email coherence in helpRequest and anecdotes
    -) Change class[0] ecc. to simply parentElement in <users-anagraphic.js>
    -) Modify anecdotes and help with contenteditable. Univoco per front e back office
    -) Folder structure: users.json inside database folder, router.js inside routing folder, others.
    -) Change username in sign in form instead of name. 
    -) Change email to username (univoco) for leaderboard (not necessary) and aneddoti. Keep the email for the help wall.
    -) Correct variables (underscore, trait or capital letters) - check guide
    -) Fix empty requests (help and anecdotes)
    -) Send codes in routing and exceptions (e.g. 200 and 403)
    -) Clean the code
    -) Change all var in let or const - check guide
    -) Test the final code on other pc

NOT NECESSARY: 

    -) Each user can delete or modify their own anecdotes
    -) Add a position field in leaderboard (1, 2, 3 etc.) & his favorite animal (favorite animal even for anecdotes)
    -) Servizio aggiuntivo: riconosci se l'animale messo dall'utente è uguale al suo preferito (come specie). Basato su API di intelligenza artificale (l'immagine viene caricata dal file system).
